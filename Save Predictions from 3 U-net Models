{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Save Predictions from 3 U-net Models","version":"0.3.2","provenance":[{"file_id":"1fcSTTX3kkQ7fVLey5-J2WF8t96sbZUVP","timestamp":1558252586606},{"file_id":"1usVUagWiEgBUdPs9_iJ_fxuI2TugMLTx","timestamp":1557978767950},{"file_id":"1XTfj6oOtg-F_LF4HX7Og5Uu6eo7PN1Qt","timestamp":1557801101702},{"file_id":"16wkwy0cWITM1In-IhbQWm132YYaq99Xj","timestamp":1555673394140}],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU"},"cells":[{"cell_type":"code","metadata":{"id":"YTsxowtYKYEh","colab_type":"code","outputId":"a0ccb2d7-c93a-4dd0-95ab-93fee2b768ef","executionInfo":{"status":"ok","timestamp":1563280442218,"user_tz":-420,"elapsed":9768,"user":{"displayName":"Jamie Alexander O'Reilly","photoUrl":"https://lh5.googleusercontent.com/-53lckYFqZt8/AAAAAAAAAAI/AAAAAAAAIXw/X6-w6O0DiaU/s64/photo.jpg","userId":"17392258528016615735"}},"colab":{"base_uri":"https://localhost:8080/","height":35}},"source":["from google.colab import drive\n","drive.mount('/gdrive', force_remount=True)"],"execution_count":1,"outputs":[{"output_type":"stream","text":["Mounted at /gdrive\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"w75oWZt3S0Yl","colab_type":"code","colab":{}},"source":["import pickle\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import cv2\n","from keras.models import load_model\n","from keras import backend as K\n","\n","def weighted_binary_crossentropy(zero_weight, one_weight):\n","\n","    def loss(y_true, y_pred):\n","\n","        # Calculate the binary crossentropy\n","        b_ce = K.binary_crossentropy(y_true, y_pred)\n","\n","        # Apply the weights\n","        weight_vector = y_true * one_weight + (1. - y_true) * zero_weight\n","        weighted_b_ce = weight_vector * b_ce\n","\n","        # Return the mean error\n","        return K.mean(weighted_b_ce)\n","\n","    return loss\n","\n","weights = np.ones((2,256,256,1))\n","weights[0,:,:,:] *= 0.5\n","weights[1,:,:,:] *= 10.0\n","\n","loss = weighted_binary_crossentropy(weights[0], weights[1])\n","\n","model_1 = load_model('/gdrive/My Drive/data/Final_Models/unet_KT2_final.h5',\n","                  custom_objects={'loss': loss})\n","\n","model_2 = load_model('/gdrive/My Drive/data/Final_Models/unet_T1_final.h5',\n","                  custom_objects={'loss': loss})\n","\n","model_3 = load_model('/gdrive/My Drive/data/Final_Models/unet_KT1_final.h5',\n","                  custom_objects={'loss': loss})"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"6F31ZLQNKYD3","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":173},"outputId":"cd64ca97-dbeb-402e-dcdc-b5ab457b5ba1","executionInfo":{"status":"ok","timestamp":1563284296516,"user_tz":-420,"elapsed":624470,"user":{"displayName":"Jamie Alexander O'Reilly","photoUrl":"https://lh5.googleusercontent.com/-53lckYFqZt8/AAAAAAAAAAI/AAAAAAAAIXw/X6-w6O0DiaU/s64/photo.jpg","userId":"17392258528016615735"}}},"source":["# from sklearn.metrics import f1_score, balanced_accuracy_score\n","# f1_scores = []\n","# case = [200]\n","# for i in case:\n","for i in range(210,300):\n","  print('Case_00%.3i'%i)\n","  with open('/gdrive/My Drive/Data_test/case_00%.3i.pickle'%i, 'rb') as f:\n","    x_prep, y_prep, restore_dat = pickle.load(f)\n","  rest_dat = np.array(restore_dat)\n","\n","  x, y = [], []\n","\n","  for j in range(0,x_prep.shape[0]):\n","    im = x_prep[j]\n","    im = np.expand_dims(im,0)\n","    im = np.expand_dims(im,4)\n","#     tar = y_prep[j]\n","# #     tar = cv2.resize(tar,(256,256),interpolation=cv2.INTER_LINEAR)\n","#     tar = np.expand_dims(tar,0)\n","#     tar = np.expand_dims(tar,4)\n","    x.append(im)\n","#     y.append(tar)\n","\n","  x = np.vstack(x)\n","#   y_true = np.vstack(y)\n","\n","  y_pred = cv2.bitwise_and(np.round(model_3.predict(x)),np.round(model_1.predict(x))) \\\n","  + cv2.bitwise_and(np.round(model_3.predict(x)),np.round(model_2.predict(x)))\n","  \n","#   y_pred = np.round(model_2.predict(x)) + np.round(model_3.predict(x))\n","  \n","  y_pred = np.squeeze(y_pred,3)\n","  np.save('/gdrive/My Drive/data/Predictions_test/case_00%.3i.npy'%i,y_pred)\n"],"execution_count":3,"outputs":[{"output_type":"stream","text":["Case_00291\n","Case_00292\n","Case_00293\n","Case_00294\n","Case_00295\n","Case_00296\n","Case_00297\n","Case_00298\n","Case_00299\n"],"name":"stdout"}]}]}